/*
 * This source file was generated by the Gradle 'init' task
 */
package com.umar.apps.vthreadsspring;

import java.net.HttpURLConnection;
import java.net.URI;
import org.gaul.httpbin.HttpBin;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.springframework.boot.SpringApplication;

class AppTest {

    /*@Test void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }*/
    
    public static void main(String[] args) throws Exception {
        runWithVirtualThreads(true);
    }
    
    private static void runWithVirtualThreads(boolean virtualThreads) throws Exception {
       
        var httpBinEndpoint = URI.create("http://127.0.0.1:8080");
        var httpbin = new HttpBin(httpBinEndpoint);
        //httpbin.start();
        // reset endpoint to handle port
        httpBinEndpoint = new URI(httpBinEndpoint.getScheme(),
        httpBinEndpoint.getUserInfo(), httpBinEndpoint.getHost(),
        httpbin.getPort(), httpBinEndpoint.getPath(),
        httpBinEndpoint.getQuery(), httpBinEndpoint.getFragment());
        URI uri = URI.create(httpBinEndpoint + "/status/200");
        HttpURLConnection conn = (HttpURLConnection) uri.toURL().openConnection();
        
        var threads = Integer.toString(Runtime.getRuntime().availableProcessors());
        System.out.println("No. of Threads: " + threads);
        System.setProperty("server.tomcat.threads.max", threads);
        System.setProperty("jdk.virtualThreadScheduler.maxPoolSize", threads);
        System.setProperty("spring.threads.virtual.enabled", Boolean.toString(virtualThreads));
        System.setProperty("url", "https://httpbin.org");
        SpringApplication.run(App.class);
        //httpbin.stop();
    }
}
